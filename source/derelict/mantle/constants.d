/*

Boost Software License - Version 1.0 - August 17th,2003

Permission is hereby granted,free of charge,to any person or organization
obtaining a copy of the software and accompanying documentation covered by
this license (the "Software") to use,reproduce,display,distribute,
execute,and transmit the Software,and to prepare derivative works of the
Software,and to permit third-parties to whom the Software is furnished to
do so,all subject to the following:

The copyright notices in the Software and this entire statement,including
the above license grant,this restriction and the following disclaimer,
must be included in all copies of the Software,in whole or in part,and
all derivative works of the Software,unless such copies or derivative
works are solely in the form of machine-executable object code generated by
a source language processor.

THE SOFTWARE IS PROVIDED "AS IS",WITHOUT WARRANTY OF ANY KIND,EXPRESS OR
IMPLIED,INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
FITNESS FOR A PARTICULAR PURPOSE,TITLE AND NON-INFRINGEMENT. IN NO EVENT
SHALL THE COPYRIGHT HOLDERS OR ANYONE DISTRIBUTING THE SOFTWARE BE LIABLE
FOR ANY DAMAGES OR OTHER LIABILITY,WHETHER IN CONTRACT,TORT OR OTHERWISE,
ARISING FROM,OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER
DEALINGS IN THE SOFTWARE.

*/

module derelict.mantle.constants;

/* ----------*/
/* Constants */
/* ----------*/

const ulong GR_NULL_HANDLE          = 0;
const int GR_MAX_PHYSICAL_GPUS      = 4;
const int GR_API_VERSION            = 1;
const int GR_MAX_PHYSICAL_GPU_NAME  = 255;   // Guess
const int GR_MAX_VIEWPORTS          = 16;    // Guess
const int GR_MAX_MEMORY_HEAPS       = 8;
const int GR_MAX_COLOR_TARGETS      = 16;    // Guess
const int GR_MAX_DESCRIPTOR_SETS    = 2;

/* ------------ */
/* Enumerations */
/* ------------ */

enum /*GR_ATOMIC_OP*/  {
   GR_ATOMIC_ADD_INT32     = 0x2d00,
   GR_ATOMIC_SUB_INT32     = 0x2d01,
   GR_ATOMIC_MIN_UINT32    = 0x2d02,
   GR_ATOMIC_MAX_UINT32    = 0x2d03,
   GR_ATOMIC_MIN_SINT32    = 0x2d04,
   GR_ATOMIC_MAX_SINT32    = 0x2d05,
   GR_ATOMIC_AND_INT32     = 0x2d06,
   GR_ATOMIC_OR_INT32      = 0x2d07,
   GR_ATOMIC_XOR_INT32     = 0x2d08,
   GR_ATOMIC_INC_UINT32    = 0x2d09,
   GR_ATOMIC_DEC_UINT32    = 0x2d0a,
   GR_ATOMIC_ADD_INT64     = 0x2d0b,
   GR_ATOMIC_SUB_INT64     = 0x2d0c,
   GR_ATOMIC_MIN_UINT64    = 0x2d0d,
   GR_ATOMIC_MAX_UINT64    = 0x2d0e,
   GR_ATOMIC_MIN_SINT64    = 0x2d0f,
   GR_ATOMIC_MAX_SINT64    = 0x2d10,
   GR_ATOMIC_AND_INT64     = 0x2d11,
   GR_ATOMIC_OR_INT64      = 0x2d12,
   GR_ATOMIC_XOR_INT64     = 0x2d13,
   GR_ATOMIC_INC_UINT64    = 0x2d14,
   GR_ATOMIC_DEC_UINT64    = 0x2d15,
}

enum /*GR_BORDER_COLOR_TYPE*/  {
   GR_BORDER_COLOR_WHITE             = 0x1c00,
   GR_BORDER_COLOR_TRANSPARENT_BLACK = 0x1c01,
   GR_BORDER_COLOR_OPAQUE_BLACK      = 0x1c02,
}

enum /*GR_BLEND*/  {
   GR_BLEND_ZERO                       = 0x2900,
   GR_BLEND_ONE                        = 0x2901,
   GR_BLEND_SRC_COLOR                  = 0x2902,
   GR_BLEND_ONE_MINUS_SRC_COLOR        = 0x2903,
   GR_BLEND_DEST_COLOR                 = 0x2904,
   GR_BLEND_ONE_MINUS_DEST_COLOR       = 0x2905,
   GR_BLEND_SRC_ALPHA                  = 0x2906,
   GR_BLEND_ONE_MINUS_SRC_ALPHA        = 0x2907,
   GR_BLEND_DEST_ALPHA                 = 0x2908,
   GR_BLEND_ONE_MINUS_DEST_ALPHA       = 0x2909,
   GR_BLEND_CONSTANT_COLOR             = 0x290a,
   GR_BLEND_ONE_MINUS_CONSTANT_COLOR   = 0x290b,
   GR_BLEND_CONSTANT_ALPHA             = 0x290c,
   GR_BLEND_ONE_MINUS_CONSTANT_ALPHA   = 0x290d,
   GR_BLEND_SRC_ALPHA_SATURATE         = 0x290e,
   GR_BLEND_SRC1_COLOR                 = 0x290f,
   GR_BLEND_ONE_MINUS_SRC1_COLOR       = 0x2910,
   GR_BLEND_SRC1_ALPHA                 = 0x2911,
   GR_BLEND_ONE_MINUS_SRC1_ALPHA       = 0x2912,
}

enum /*GR_BLEND_FUNC*/  {
   GR_BLEND_FUNC_ADD               = 0x2a00,
   GR_BLEND_FUNC_SUBTRACT          = 0x2a01,
   GR_BLEND_FUNC_REVERSE_SUBTRACT  = 0x2a02,
   GR_BLEND_FUNC_MIN               = 0x2a03,
   GR_BLEND_FUNC_MAX               = 0x2a04,
}

enum /*GR_CHANNEL_FORMAT*/  {
   GR_CH_FMT_UNDEFINED     = 0u,
   GR_CH_FMT_R4G4          = 1u,
   GR_CH_FMT_R4G4B4A4      = 2u,
   GR_CH_FMT_R5G6B5        = 3u,
   GR_CH_FMT_B5G6R5        = 4u,
   GR_CH_FMT_R5G5B5A1      = 5u,
   GR_CH_FMT_R8            = 6u,
   GR_CH_FMT_R8G8          = 7u,
   GR_CH_FMT_R8G8B8A8      = 8u,
   GR_CH_FMT_B8G8R8A8      = 9u,
   GR_CH_FMT_R10G11B11     = 10u,
   GR_CH_FMT_R11G11B10     = 11u,
   GR_CH_FMT_R10G10B10A2   = 12u,
   GR_CH_FMT_R16           = 13u,
   GR_CH_FMT_R16G16        = 14u,
   GR_CH_FMT_R16G16B16A16  = 15u,
   GR_CH_FMT_R32           = 16u,
   GR_CH_FMT_R32G32        = 17u,
   GR_CH_FMT_R32G32B32     = 18u,
   GR_CH_FMT_R32G32B32A32  = 19u,
   GR_CH_FMT_R16G8         = 20u,
   GR_CH_FMT_R32G8         = 21u,
   GR_CH_FMT_R9G9B9E5      = 22u,
   GR_CH_FMT_BC1           = 23u,
   GR_CH_FMT_BC2           = 24u,
   GR_CH_FMT_BC3           = 25u,
   GR_CH_FMT_BC4           = 26u,
   GR_CH_FMT_BC5           = 27u,
   GR_CH_FMT_BC6U          = 28u,
   GR_CH_FMT_BC6S          = 29u,
   GR_CH_FMT_BC7           = 30u,
}

enum /*GR_CHANNEL_SWIZZLE*/  {
   GR_CHANNEL_SWIZZLE_ZERO = 0x1800,
   GR_CHANNEL_SWIZZLE_ONE  = 0x1801,
   GR_CHANNEL_SWIZZLE_R    = 0x1802,
   GR_CHANNEL_SWIZZLE_G    = 0x1803,
   GR_CHANNEL_SWIZZLE_B    = 0x1804,
   GR_CHANNEL_SWIZZLE_A    = 0x1805,
}

enum /*GR_COMPARE_FUNC*/  {
    GR_COMPARE_NEVER            = 0x2500,
    GR_COMPARE_LESS             = 0x2501,
    GR_COMPARE_EQUAL            = 0x2502,
    GR_COMPARE_LESS_EQUAL       = 0x2503,
    GR_COMPARE_GREATER          = 0x2504,
    GR_COMPARE_NOT_EQUAL        = 0x2505,
    GR_COMPARE_GREATER_EQUAL    = 0x2506,
    GR_COMPARE_ALWAYS           = 0x2507,
}

enum /*GR_CULL_MODE*/  {
   GR_CULL_NONE        = 0x2700,
   GR_CULL_FRONT       = 0x2701,
   GR_CULL_BACK        = 0x2702,
}

enum /*GR_DESCRIPTOR_SET_SLOT_TYPE*/  {
   GR_SLOT_UNUSED              = 0x1900,
   GR_SLOT_SHADER_RESOURCE     = 0x1901,
   GR_SLOT_SHADER_UAV          = 0x1902,
   GR_SLOT_SHADER_SAMPLER      = 0x1903,
   GR_SLOT_NEXT_DESCRIPTOR_SET = 0x1904,
}

enum /*GR_FACE_ORIENTATION*/  {
   GR_FRONT_FACE_CCW   = 0x2800,
   GR_FRONT_FACE_CW    = 0x2801,
}

enum /*GR_FILL_MODE*/  {
   GR_FILL_SOLID       = 0x2600,
   GR_FILL_WIREFRAME   = 0x2601,
}

enum /*GR_HEAP_MEMORY_TYPE*/  {
    GR_HEAP_MEMORY_OTHER    = 0x2f00,
    GR_HEAP_MEMORY_LOCAL    = 0x2f01,
    GR_HEAP_MEMORY_REMOTE   = 0x2f02,
    GR_HEAP_MEMORY_EMBEDDED = 0x2f03,
}

enum /*GR_IMAGE_ASPECT*/  {
   GR_IMAGE_ASPECT_COLOR   = 0x1700,
   GR_IMAGE_ASPECT_DEPTH   = 0x1701,
   GR_IMAGE_ASPECT_STENCIL = 0x1702,
}

enum /*GR_IMAGE_STATE*/  {
   GR_IMAGE_STATE_DATA_TRANSFER                = 0x1300,
   GR_IMAGE_STATE_GRAPHICS_SHADER_READ_ONLY    = 0x1301,
   GR_IMAGE_STATE_GRAPHICS_SHADER_WRITE_ONLY   = 0x1302,
   GR_IMAGE_STATE_GRAPHICS_SHADER_READ_WRITE   = 0x1303,
   GR_IMAGE_STATE_COMPUTE_SHADER_READ_ONLY     = 0x1304,
   GR_IMAGE_STATE_COMPUTE_SHADER_WRITE_ONLY    = 0x1305,
   GR_IMAGE_STATE_COMPUTE_SHADER_READ_WRITE    = 0x1306,
   GR_IMAGE_STATE_MULTI_SHADER_READ_ONLY       = 0x1307,
   GR_IMAGE_STATE_TARGET_AND_SHADER_READ_ONLY  = 0x1308,
   GR_IMAGE_STATE_UNINITIALIZED                = 0x1309,
   GR_IMAGE_STATE_TARGET_RENDER_ACCESS_OPTIMAL = 0x130a,
   GR_IMAGE_STATE_TARGET_SHADER_ACCESS_OPTIMAL = 0x130b,
   GR_IMAGE_STATE_CLEAR                        = 0x130c,
   GR_IMAGE_STATE_RESOLVE_SOURCE               = 0x130d,
   GR_IMAGE_STATE_RESOLVE_DESTINATION          = 0x130e,
   GR_IMAGE_STATE_DISCARD                      = 0x131f,
   GR_IMAGE_STATE_DATA_TRANSFER_SOURCE         = 0x1310,
   GR_IMAGE_STATE_DATA_TRANSFER_DESTINATION    = 0x1311,
}

enum /*GR_IMAGE_TILING*/  {
   GR_LINEAR_TILING    = 0x1500,
   GR_OPTIMAL_TILING   = 0x1501,
}

enum /*GR_IMAGE_TYPE*/  {
   GR_IMAGE_1D         = 0x1400,
   GR_IMAGE_2D         = 0x1401,
   GR_IMAGE_3D         = 0x1402,
}

enum /*GR_IMAGE_VIEW_TYPE*/  {
   GR_IMAGE_VIEW_1D    = 0x1600,
   GR_IMAGE_VIEW_2D    = 0x1601,
   GR_IMAGE_VIEW_3D    = 0x1602,
   GR_IMAGE_VIEW_CUBE  = 0x1603,
}

enum /*GR_INDEX_TYPE*/  {
   GR_INDEX_16         = 0x2100,
   GR_INDEX_32         = 0x2101,
}

enum /*GR_INFO_TYPE*/  {
   GR_INFO_TYPE_PHYSICAL_GPU_PROPERTIES            = 0x6100,
   GR_INFO_TYPE_PHYSICAL_GPU_PERFORMANCE           = 0x6101,
   GR_INFO_TYPE_PHYSICAL_GPU_QUEUE_PROPERTIES      = 0x6102,
   GR_INFO_TYPE_PHYSICAL_GPU_MEMORY_PROPERTIES     = 0x6103,
   GR_INFO_TYPE_PHYSICAL_GPU_IMAGE_PROPERTIES      = 0x6104,
   GR_INFO_TYPE_MEMORY_HEAP_PROPERTIES             = 0x6200,
   GR_INFO_TYPE_FORMAT_PROPERTIES                  = 0x6300,
   GR_INFO_TYPE_SUBRESOURCE_LAYOUT                 = 0x6400,
   GR_INFO_TYPE_MEMORY_REQUIREMENTS                = 0x6800,
   GR_INFO_TYPE_PARENT_DEVICE                      = 0x6801,
   GR_INFO_TYPE_PARENT_PHYSICAL_GPU                = 0x6802,
}

enum /*GR_LOGIC_OP*/  {
   GR_LOGIC_OP_COPY            = 0x2c00,
   GR_LOGIC_OP_CLEAR           = 0x2c01,
   GR_LOGIC_OP_AND             = 0x2c02,
   GR_LOGIC_OP_AND_REVERSE     = 0x2c03,
   GR_LOGIC_OP_AND_INVERTED    = 0x2c04,
   GR_LOGIC_OP_NOOP            = 0x2c05,
   GR_LOGIC_OP_XOR             = 0x2c06,
   GR_LOGIC_OP_OR              = 0x2c07,
   GR_LOGIC_OP_NOR             = 0x2c08,
   GR_LOGIC_OP_EQUIV           = 0x2c09,
   GR_LOGIC_OP_INVERT          = 0x2c0a,
   GR_LOGIC_OP_OR_REVERSE      = 0x2c0b,
   GR_LOGIC_OP_COPY_INVERTED   = 0x2c0c,
   GR_LOGIC_OP_OR_INVERTED     = 0x2c0d,
   GR_LOGIC_OP_NAND            = 0x2c0e,
   GR_LOGIC_OP_SET             = 0x2c0f,
}

enum /*GR_MEMORY_PRIORITY*/  {
   GR_MEMORY_PRIORITY_NORMAL    = 0x1100,
   GR_MEMORY_PRIORITY_HIGH      = 0x1101,
   GR_MEMORY_PRIORITY_LOW       = 0x1102,
   GR_MEMORY_PRIORITY_UNUSED    = 0x1103,
   GR_MEMORY_PRIORITY_VERY_HIGH = 0x1104,
   GR_MEMORY_PRIORITY_VERY_LOW  = 0x1105,
}

enum /*GR_MEMORY_STATE*/ {
   GR_MEMORY_STATE_DATA_TRANSFER               = 0x1200,
   GR_MEMORY_STATE_GRAPHICS_SHADER_READ_ONLY   = 0x1201,
   GR_MEMORY_STATE_GRAPHICS_SHADER_WRITE_ONLY  = 0x1202,
   GR_MEMORY_STATE_GRAPHICS_SHADER_READ_WRITE  = 0x1203,
   GR_MEMORY_STATE_COMPUTE_SHADER_READ_ONLY    = 0x1204,
   GR_MEMORY_STATE_COMPUTE_SHADER_WRITE_ONLY   = 0x1205,
   GR_MEMORY_STATE_COMPUTE_SHADER_READ_WRITE   = 0x1206,
   GR_MEMORY_STATE_MULTI_USE_READ_ONLY         = 0x1207,
   GR_MEMORY_STATE_INDEX_DATA                  = 0x1208,
   GR_MEMORY_STATE_INDIRECT_ARG                = 0x1209,
   GR_MEMORY_STATE_WRITE_TIMESTAMP             = 0x120a,
   GR_MEMORY_STATE_QUEUE_ATOMIC                = 0x120b,
   GR_MEMORY_STATE_DISCARD                     = 0x120c,
   GR_MEMORY_STATE_DATA_TRANSFER_SOURCE        = 0x120d,
   GR_MEMORY_STATE_DATA_TRANSFER_DESTINATION   = 0x120e,
}

enum /*GR_NUM_FORMAT*/  {
   GR_NUM_FMT_UNDEFINED    = 0u,
   GR_NUM_FMT_UNORM        = 1u,
   GR_NUM_FMT_SNORM        = 2u,
   GR_NUM_FMT_UINT         = 3u,
   GR_NUM_FMT_SINT         = 4u,
   GR_NUM_FMT_FLOAT        = 5u,
   GR_NUM_FMT_SRGB         = 6u,
   GR_NUM_FMT_DS           = 7u,
}

enum /*GR_PHYSICAL_GPU_TYPE*/  {
   GR_GPU_TYPE_OTHER                = 0x3000,
   GR_GPU_TYPE_INTEGRATED           = 0x3001,
   GR_GPU_TYPE_DISCRETE             = 0x3002,
   GR_GPU_TYPE_VIRTUAL              = 0x3003,
}

enum /*GR_PIPELINE_BIND_POINT*/  {
   GR_PIPELINE_BIND_POINT_COMPUTE  = 0x1e00,
   GR_PIPELINE_BIND_POINT_GRAPHICS = 0x1e01,
}

enum /*GR_PRIMITIVE_TOPOLOGY*/  {
   GR_TOPOLOGY_POINT_LIST          = 0x2000,
   GR_TOPOLOGY_LINE_LIST           = 0x2001,
   GR_TOPOLOGY_LINE_STRIP          = 0x2002,
   GR_TOPOLOGY_TRIANGLE_LIST       = 0x2003,
   GR_TOPOLOGY_TRIANGLE_STRIP      = 0x2004,
   GR_TOPOLOGY_RECT_LIST           = 0x2005,
   GR_TOPOLOGY_QUAD_LIST           = 0x2006,
   GR_TOPOLOGY_QUAD_STRIP          = 0x2007,
   GR_TOPOLOGY_LINE_LIST_ADJ       = 0x2008,
   GR_TOPOLOGY_LINE_STRIP_ADJ      = 0x2009,
   GR_TOPOLOGY_TRIANGLE_LIST_ADJ   = 0x200a,
   GR_TOPOLOGY_TRIANGLE_STRIP_ADJ  = 0x200b,
   GR_TOPOLOGY_PATCH               = 0x200c,
}

enum /*GR_QUERY_TYPE*/  {
    GR_QUERY_OCCLUSION              = 0x1a00,
    GR_QUERY_PIPELINE_STATISTICS    = 0x1a01,
}

enum /*GR_QUEUE_TYPE*/  {
   GR_QUEUE_UNIVERSAL = 0x1000,
   GR_QUEUE_COMPUTE   = 0x1001,
}

enum /*GR_STATE_BIND_POINT*/  {
   GR_STATE_BIND_VIEWPORT      = 0x1f00,
   GR_STATE_BIND_RASTER        = 0x1f01,
   GR_STATE_BIND_DEPTH_STENCIL = 0x1f02,
   GR_STATE_BIND_COLOR_BLEND   = 0x1f03,
   GR_STATE_BIND_MSAA          = 0x1f04,
}

enum /*GR_STENCIL_OP*/  {
   GR_STENCIL_OP_KEEP      = 0x2b00,
   GR_STENCIL_OP_ZERO      = 0x2b01,
   GR_STENCIL_OP_REPLACE   = 0x2b02,
   GR_STENCIL_OP_INC_CLAMP = 0x2b03,
   GR_STENCIL_OP_DEC_CLAMP = 0x2b04,
   GR_STENCIL_OP_INVERT    = 0x2b05,
   GR_STENCIL_OP_INC_WRAP  = 0x2b06,
   GR_STENCIL_OP_DEC_WRAP  = 0x2b07,
}

enum /*GR_SYSTEM_ALLOC_TYPE*/  {
   GR_SYSTEM_ALLOC_API_OBJECT      = 0x2e00,
   GR_SYSTEM_ALLOC_INTERNAL        = 0x2e01,
   GR_SYSTEM_ALLOC_INTERNAL_TEMP   = 0x2e02,
   GR_SYSTEM_ALLOC_INTERNAL_SHADER = 0x2e03,
   GR_SYSTEM_ALLOC_DEBUG           = 0x2e04,
}

enum /*GR_TEX_ADDRESS*/  {
   GR_TEX_ADDRESS_WRAP         = 0x2400,
   GR_TEX_ADDRESS_MIRROR       = 0x2401,
   GR_TEX_ADDRESS_CLAMP        = 0x2402,
   GR_TEX_ADDRESS_MIRROR_ONCE  = 0x2403,
   GR_TEX_ADDRESS_CLAMP_BORDER = 0x2404,
}

enum /*GR_TEX_FILTER*/  {
   GR_TEX_FILTER_MAG_POINT_MIN_POINT_MIP_POINT     = 0x2340,
   GR_TEX_FILTER_MAG_LINEAR_MIN_POINT_MIP_POINT    = 0x2341,
   GR_TEX_FILTER_MAG_POINT_MIN_LINEAR_MIP_POINT    = 0x2344,
   GR_TEX_FILTER_MAG_LINEAR_MIN_LINEAR_MIP_POINT   = 0x2345,
   GR_TEX_FILTER_MAG_POINT_MIN_POINT_MIP_LINEAR    = 0x2380,
   GR_TEX_FILTER_MAG_LINEAR_MIN_POINT_MIP_LINEAR   = 0x2381,
   GR_TEX_FILTER_MAG_POINT_MIN_LINEAR_MIP_LINEAR   = 0x2384,
   GR_TEX_FILTER_MAG_LINEAR_MIN_LINEAR_MIP_LINEAR  = 0x2385,
   GR_TEX_FILTER_ANISOTROPIC                       = 0x238f,
}

enum /*GR_TIMESTAMP_TYPE*/  {
   GR_TIMESTAMP_TOP        = 0x1b00,
   GR_TIMESTAMP_BOTTOM     = 0x1b01,
}

enum /*GR_VALIDATION_LEVEL*/  {
    GR_VALIDATION_LEVEL_0   = 0x8000,
    GR_VALIDATION_LEVEL_1   = 0x8001,
    GR_VALIDATION_LEVEL_2   = 0x8002,
    GR_VALIDATION_LEVEL_3   = 0x8003,
    GR_VALIDATION_LEVEL_4   = 0x8004,
}

/* ----- */
/* Flags */
/* ----- */

enum /*GR_CMD_BUFFER_BUILD_FLAGS*/  {
   GR_CMD_BUFFER_OPTIMIZE_GPU_SMALL_BATCH       = 0x00000001,
   GR_CMD_BUFFER_OPTIMIZE_PIPELINE_SWITCH       = 0x00000002,
   GR_CMD_BUFFER_OPTIMIZE_ONE_TIME_SUBMIT       = 0x00000004,
   GR_CMD_BUFFER_OPTIMIZE_DESCRIPTOR_SET_SWITCH = 0x00000008,
}

enum /*GR_DEPTH_STENCIL_VIEW_CREATE_FLAGS*/  {
    GR_DEPTH_STENCIL_VIEW_CREATE_READ_ONLY_DEPTH   = 0x00000001,
    GR_DEPTH_STENCIL_VIEW_CREATE_READ_ONLY_STENCIL = 0x00000002,
}

enum /*GR_DEVICE_CREATE_FLAGS*/  {
   GR_DEVICE_CREATE_VALIDATION = 0x00000001,
}

enum /*GR_FORMAT_FEATURE_FLAGS*/  {
   GR_FORMAT_IMAGE_SHADER_READ    = 0x00000001,
   GR_FORMAT_IMAGE_SHADER_WRITE   = 0x00000002,
   GR_FORMAT_IMAGE_COPY           = 0x00000004,
   GR_FORMAT_MEMORY_SHADER_ACCESS = 0x00000008,
   GR_FORMAT_COLOR_TARGET_WRITE   = 0x00000010,
   GR_FORMAT_COLOR_TARGET_BLEND   = 0x00000020,
   GR_FORMAT_DEPTH_TARGET         = 0x00000040,
   GR_FORMAT_STENCIL_TARGET       = 0x00000080,
   GR_FORMAT_MSAA_TARGET          = 0x00000100,
   GR_FORMAT_CONVERSION           = 0x00000200,
}

enum /*GR_GPU_COMPATIBILITY_FLAGS*/  {
   GR_GPU_COMPAT_ASIC_FEATURES       = 0x00000001,
   GR_GPU_COMPAT_IQ_MATCH            = 0x00000002,
   GR_GPU_COMPAT_PEER_WRITE_TRANSFER = 0x00000004,
   GR_GPU_COMPAT_SHARED_MEMORY       = 0x00000008,
   GR_GPU_COMPAT_SHARED_SYNC         = 0x00000010,
   GR_GPU_COMPAT_SHARED_GPU0_DISPLAY = 0x00000020,
   GR_GPU_COMPAT_SHARED_GPU1_DISPLAY = 0x00000040,
}

enum /*GR_IMAGE_CREATE_FLAGS*/  {
   GR_IMAGE_CREATE_INVARIANT_DATA     = 0x00000001,
   GR_IMAGE_CREATE_CLONEABLE          = 0x00000002,
   GR_IMAGE_CREATE_SHAREABLE          = 0x00000004,
   GR_IMAGE_CREATE_VIEW_FORMAT_CHANGE = 0x00000008,
}

enum /*GR_IMAGE_USAGE_FLAGS*/  {
   GR_IMAGE_USAGE_SHADER_ACCESS_READ  = 0x00000001,
   GR_IMAGE_USAGE_SHADER_ACCESS_WRITE = 0x00000002,
   GR_IMAGE_USAGE_COLOR_TARGET        = 0x00000004,
   GR_IMAGE_USAGE_DEPTH_STENCIL       = 0x00000008,
}

enum /*GR_MEMORY_ALLOC_FLAGS*/  {
   GR_MEMORY_ALLOC_VIRTUAL   = 0x00000001,
   GR_MEMORY_ALLOC_SHAREABLE = 0x00000002,
}

enum /*GR_MEMORY_HEAP_FLAGS*/ {
   GR_MEMORY_HEAP_CPU_VISIBLE        = 0x00000001,
   GR_MEMORY_HEAP_CPU_GPU_COHERENT   = 0x00000002,
   GR_MEMORY_HEAP_CPU_UNCACHED       = 0x00000004,
   GR_MEMORY_HEAP_CPU_WRITE_COMBINED = 0x00000008,
   GR_MEMORY_HEAP_HOLDS_PINNED       = 0x00000010,
   GR_MEMORY_HEAP_SHAREABLE          = 0x00000020,
}

enum /*GR_MEMORY_PROPERTY_FLAGS*/  {
   GR_MEMORY_MIGRATION_SUPPORT         = 0x00000001,
   GR_MEMORY_VIRTUAL_REMAPPING_SUPPORT = 0x00000002,
   GR_MEMORY_PINNING_SUPPORT           = 0x00000004,
   GR_MEMORY_PREFER_GLOBAL_REFS        = 0x00000008,
}

enum /*GR_MEMORY_REF_FLAGS*/  {
   GR_MEMORY_REF_READ_ONLY = 0x00000001,
}

enum /*GR_PIPELINE_CREATE_FLAGS*/  {
   GR_PIPELINE_CREATE_DISABLE_OPTIMIZATION = 0x00000001,
}

enum /*GR_QUERY_CONTROL_FLAGS*/  {
   GR_QUERY_IMPRECISE_DATA = 0x00000001,
}

enum /*GR_SEMAPHORE_CREATE_FLAGS*/  {
   GR_SEMAPHORE_CREATE_SHAREABLE = 0x00000001,
} 

enum /*GR_SHADER_CREATE_FLAGS*/  {
   GR_SHADER_CREATE_ALLOW_RE_Z = 0x00000001,
}

/* Debug and Validation Enumerations */
enum /*GR_DBG_DATA_TYPE*/  {
    GR_DBG_DATA_OBJECT_TYPE          = 0x00020a00,
    GR_DBG_DATA_OBJECT_CREATE_INFO   = 0x00020a01,
    GR_DBG_DATA_OBJECT_TAG           = 0x00020a02,
    GR_DBG_DATA_CMD_BUFFER_API_TRACE = 0x00020b00,
    GR_DBG_DATA_MEMORY_OBJECT_LAYOUT = 0x00020c00,
    GR_DBG_DATA_MEMORY_OBJECT_STATE  = 0x00020c01,
    GR_DBG_DATA_SEMAPHORE_IS_BLOCKED = 0x00020d00,
}

enum /*GR_DBG_DEVICE_OPTION*/  {
    GR_DBG_OPTION_DISABLE_PIPELINE_LOADS         = 0x00020400,
    GR_DBG_OPTION_FORCE_OBJECT_MEMORY_REQS       = 0x00020401,
    GR_DBG_OPTION_FORCE_LARGE_IMAGE_ALIGNMENT    = 0x00020402,
    GR_DBG_OPTION_SKIP_EXECUTION_ON_ERROR        = 0x00020403,
}

enum /*GR_DBG_GLOBAL_OPTION*/  {
    GR_DBG_OPTION_DEBUG_ECHO_ENABLE = 0x00020100,
    GR_DBG_OPTION_BREAK_ON_ERROR    = 0x00020101,
    GR_DBG_OPTION_BREAK_ON_WARNING  = 0x00020102,
}

enum /*GR_DBG_MSG_FILTER*/  {
    GR_DBG_MSG_FILTER_NONE     = 0x00020800,
    GR_DBG_MSG_FILTER_REPEATED = 0x00020801,
    GR_DBG_MSG_FILTER_ALL      = 0x00020802,
}

enum /*GR_DBG_MSG_TYPE*/  {
    GR_DBG_MSG_UNKNOWN      = 0x00020000,
    GR_DBG_MSG_ERROR        = 0x00020001,
    GR_DBG_MSG_WARNING      = 0x00020002,
    GR_DBG_MSG_PERF_WARNING = 0x00020003,
}

enum /*GR_DBG_OBJECT_TYPE*/  {
    GR_DBG_OBJECT_UNKNOWN                = 0x00020900,
    GR_DBG_OBJECT_DEVICE                 = 0x00020901,
    GR_DBG_OBJECT_QUEUE                  = 0x00020902,
    GR_DBG_OBJECT_GPU_MEMORY             = 0x00020903,
    GR_DBG_OBJECT_IMAGE                  = 0x00020904,
    GR_DBG_OBJECT_IMAGE_VIEW             = 0x00020905,
    GR_DBG_OBJECT_COLOR_TARGET_VIEW      = 0x00020906,
    GR_DBG_OBJECT_DEPTH_STENCIL_VIEW     = 0x00020907,
    GR_DBG_OBJECT_SHADER                 = 0x00020908,
    GR_DBG_OBJECT_GRAPHICS_PIPELINE      = 0x00020909,
    GR_DBG_OBJECT_COMPUTE_PIPELINE       = 0x0002090a,
    GR_DBG_OBJECT_SAMPLER                = 0x0002090b,
    GR_DBG_OBJECT_DESCRIPTOR_SET         = 0x0002090c,
    GR_DBG_OBJECT_VIEWPORT_STATE         = 0x0002090d,
    GR_DBG_OBJECT_RASTER_STATE           = 0x0002090e,
    GR_DBG_OBJECT_MSAA_STATE             = 0x0002090f,
    GR_DBG_OBJECT_COLOR_BLEND_STATE      = 0x00020910,
    GR_DBG_OBJECT_DEPTH_STENCIL_STATE    = 0x00020911,
    GR_DBG_OBJECT_CMD_BUFFER             = 0x00020912,
    GR_DBG_OBJECT_FENCE                  = 0x00020913,
    GR_DBG_OBJECT_QUEUE_SEMAPHORE        = 0x00020914,
    GR_DBG_OBJECT_EVENT                  = 0x00020915,
    GR_DBG_OBJECT_QUERY_POOL             = 0x00020916,
    GR_DBG_OBJECT_SHARED_GPU_MEMORY      = 0x00020917,
    GR_DBG_OBJECT_SHARED_QUEUE_SEMAPHORE = 0x00020918,
    GR_DBG_OBJECT_PEER_GPU_MEMORY        = 0x00020919,
    GR_DBG_OBJECT_PEER_IMAGE             = 0x0002091a,
    GR_DBG_OBJECT_PINNED_GPU_MEMORY      = 0x0002091b,
    GR_DBG_OBJECT_INTERNAL_GPU_MEMORY    = 0x0002091c,
}

/* ----------------------- */
/* Errors and Return Codes */
/* ----------------------- */

enum /*GR_RESULT*/  {
   GR_SUCCESS = 0x10000,
   GR_UNSUPPORTED,
   GR_NOT_READY,
   GR_TIMEOUT,
   GR_EVENT_SET,
   GR_EVENT_RESET,

   GR_ERROR_UNKNOW = 0x11000,
   GR_ERROR_UNAVAILABLE,
   GR_ERROR_INITIALIZATION_FAILED,
   GR_ERROR_OUT_OF_MEMORY,
   GR_ERROR_OUT_OF_GPU_MEMORY,
   GR_ERROR_DEVICE_ALREADY_CREATED,
   GR_ERROR_DEVICE_LOST,
   GR_ERROR_INVALID_POINTER,
   GR_ERROR_INVALID_VALUE,
   GR_ERROR_INVALID_HANDLE,
   GR_ERROR_INVALID_ORDINAL,
   GR_ERROR_INVALID_MEMORY_SIZE,
   GR_ERROR_INVALID_EXTENSION,
   GR_ERROR_INVALID_FLAGS,
   GR_ERROR_INVALID_ALIGNMENT,
   GR_ERROR_INVALID_FORMAT,
   GR_ERROR_INVALID_IMAGE,
   GR_ERROR_INVALID_DESCRIPTOR_SET_DATA,
   GR_ERROR_INVALID_QUEUE_TYPE,
   GR_ERROR_INVALID_OBJECT_TYPE,
   GR_ERROR_UNSUPPORTED_SHADER_IL_VERSION,
   GR_ERROR_BAD_SHADER_CODE,
   GR_ERROR_BAD_PIPELINE_DATA,
   GR_ERROR_TOO_MANY_MEMORY_REFERENCES,
   GR_ERROR_NOT_MAPPABLE,
   GR_ERROR_MEMORY_MAP_FAILED,
   GR_ERROR_MEMORY_UNMAP_FAILED,
   GR_ERROR_INCOMPATIBLE_DEVICE,
   GR_ERROR_INCOMPATIBLE_DRIVER,
   GR_ERROR_INCOMPLETE_COMMAND_BUFFER,
   GR_ERROR_BUILDING_COMMAND_BUFFER,
   GR_ERROR_MEMORY_NOT_BOUND,
   GR_ERROR_INCOMPATIBLE_QUEUE,
   GR_ERROR_NOT_SHAREABLE
}